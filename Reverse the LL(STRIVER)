// ------------REVERSE THE LINKED LIST----------------------------------



#include <bits/stdc++.h>

using namespace std;


struct node{

            int data;
            struct node*next;
            
};

node * revLL(node * head){
    
    node*prev = NULL;
    node*curr = head;
    node*forward = NULL;
    
    
    while(curr != NULL){
        forward = curr->next;
        curr->next = prev;
        
        // AHEAD
        prev = curr;
        curr = forward;
        
    }
      return prev ;
    //   AS PRE WILL return 
}




int main()
{
   node n1 = {10 , NULL};
   node n2 = {20 , NULL};
   node n3 = {40 , NULL};
   node n4 = {50 , NULL};
   
   n1.next = &n2;
   n2.next = &n3;
   n3.next = &n4;
   
//   linking first node head
   node * head =&n1;
   
//   intializing head as temp so we do not loose our head
    node *temp = head;
    
    // traversal
    while(temp){
        cout<<temp->data<<" ";
        temp = temp->next;
    }
    
    node * rev = revLL(head);
    // intializing head to temp
    temp = rev;
    cout<<" \n";
   
   while(temp){
       cout<<temp->data<<" ";
       temp = temp -> next;
   }
   
   

    return 0;
}
